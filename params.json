{"name":"Ss2json","body":"\r\n# ss2json\r\n\r\n\r\n**ss2json** is a SpreadSheet To Json converter. It follow a few rules for generating nested hash.\r\n\r\n## Tutorial\r\n\r\n### Step 1\r\n\r\nFor example, this document:\r\n\r\n![Excel](https://github.com/wooga/ss2json/raw/master/doc/ss2json-2.png \"Title is optional\")\r\n\r\nWe download as an OpenOffice document (ods), and run:\r\n\r\n```ss2json -f document.ods```\r\n\r\nWill converted in this:\r\n\r\n```javascript\r\n[\r\n  {\r\n    \"id\": 1,\r\n    \"name\": { \"first\": \"Guillermo\", \"last\": \"Alvarez\" },\r\n    \"child\": [ { \"name\": \"pepe\", \"age\": 2 }, { \"name\": \"Juanjo\" } ]\r\n  },\r\n  {\r\n    \"id\": 2,\r\n    \"name\": { \"first\": \"Martin\", \"last\": \"Luther\" },\r\n    \"child\": [ { \"name\": \"Jr\" } ]\r\n  },\r\n  {\r\n    \"id\": 3,\r\n    \"name\": { \"first\": \"Jesper\" }\r\n  },\r\n  { \"id\": 4 },\r\n  { \"id\": 5 },\r\n  { \"id\": 6 }\r\n]\r\n```\r\n\r\n### Step 2\r\n\r\nWe want to remove the last columns, so we need to tell **ss2json** to check for the name. We do that with the __-c__ parameter.\r\n\r\n```\r\nss2json -f documents.ods -c name\r\n```\r\n\r\n```javascript\r\n[\r\n  {\r\n    \"id\": 1,\r\n    \"name\": { \"first\": \"Guillermo\", \"last\": \"Alvarez\" },\r\n    \"child\": [ { \"name\": \"pepe\", \"age\": 2 }, { \"name\": \"Juanjo\" } ]\r\n  },\r\n  {\r\n    \"id\": 2,\r\n    \"name\": { \"first\": \"Martin\",\"last\": \"Luther\"},\r\n    \"child\": [{\"name\": \"Jr\"}]\r\n  },\r\n  {\r\n    \"id\": 3,\r\n    \"name\": {\"first\": \"Jesper\"}\r\n  }\r\n]\r\n```\r\n\r\n### Step 3\r\n\r\nWe have a crappy parser, and need to include blank_fieds, so we say that to ss2json.\r\n\r\n```\r\nss2json -f documents.ods -c name -b\r\n```\r\n\r\n\r\n### Step 4\r\n\r\nWe have the rows with the title in colum 3, as in:\r\n\r\n![Excel](https://github.com/wooga/ss2json/raw/master/doc/ss2json-1.png \"Title is optional\")\r\n\r\nSo we say to **ss2json** to start parsing in the row tree:\r\n\r\n```\r\nss2json -f documents.ods -c name -r 3\r\n```\r\n\r\n### Step 5\r\n\r\nWe don't want to open the file to have a list of the sheets:\r\n\r\n```\r\nss2json -f documents.ods -l\r\n```\r\n\r\n\r\n\r\n## Support\r\n\r\nRight now ss2json supports ods and xlsx files.\r\n\r\n\r\n\r\n## Install\r\n\r\n    gem install ss2json\r\n\r\n## Usage\r\n\r\n\r\nRun ```ss2json -h```\r\n\r\n```sh\r\nYou need to at least specify a file\r\nUsage: ss2json -f FILENAME [options]\r\n\r\n    -s, --sheet SHEET_NAME           Use other that the first table\r\n    -r, --first-row ROW_NUMBER       Set the default first row\r\n    -f, --file FILENAME              Use the filename\r\n    -i, --ignore-value VALUE         Ignore the fields with that value. Could be use several times\r\n    -b, --include-blank              Generate a json with the values included in the ignore list\r\n    -c, --check-column NAME          Only output objects wich his property NAME is not in IGNORED VALUES\r\n    -d, --disable-conversion         Disable the conversion from floats to integers\r\n\r\n    -l, --list-sheets                Return the list of sheets\r\n\r\n    -h, --help                       Show this help\r\n```\r\n\r\n## TODO\r\n\r\n  * Support all the document formats from **roo** librarly.\r\n  * -c options should be able to check inside the hash, for example name.first should check {\"name\":{\"first\": null}}\r\n\r\n## License\r\n\r\nBSD\r\n","tagline":"The SpreadSheet / Excel to Json converter","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}